# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # # default configuration for services in *this* file
    # _defaults:
    #     # automatically injects dependencies in your services
    #     autowire: true
    #     # automatically registers your services as commands, event subscribers, etc.
    #     autoconfigure: true
    #     # this means you cannot fetch services directly from the container via $container->get()
    #     # if you need to do this, you can override this setting on individual services
    #     public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']


    UserBundle\:
        resource: '../../src/UserBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/UserBundle/{Entity,Repository,Tests}'
    
    UserBundle\Controller\:
        resource: '../../src/UserBundle/Controller'
        public: true
        tags: ['controller.service_arguments']


    # Service pour la gestion des comptes
    app.account_service:
        class: AccountBundle\Service\AccountService
        calls:
            - [setContainer, ["@service_container"]]


    #Service d'écoute pour la redirection d'un utilisateur à la page d'accueil lorsqu'il est connecté 
# et essaye d'acceder à la page de login
    app.tokens.action_listener:
        class: UserBundle\EventListener\RedirectUserListener
        arguments: ["@security.token_storage","@router"]
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }

            #service de redirection vers la page de login pour un durée d'inactvité définit 
    user.handler.session_idle:
        class: UserBundle\Handler\SessionIdleHandler
        arguments: ["@session", "@security.token_storage", "@router", "%session_max_idle_time%"]
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }

    activity_listener:
        class: UserBundle\EventListener\ActivityListener
        arguments: ["@security.token_storage", "@doctrine.orm.entity_manager"]
        tags:
            - { name: kernel.event_listener, event: kernel.controller, method: onCoreController }
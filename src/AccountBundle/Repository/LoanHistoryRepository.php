<?php

namespace AccountBundle\Repository;

use AccountBundle\Entity\Loan;
use AccountBundle\Entity\LoanHistory;
use Doctrine\ORM\EntityRepository;
use MemberBundle\Entity\Member;

/**
 * LoanHistoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LoanHistoryRepository extends EntityRepository
{
    /**
     * @return array
     */
    public function getAllActiveLoans()
    {
        $em = $this->getEntityManager();
        $loans = $em->getRepository(Loan::class)->getLoansOrderByAccountName();

        foreach ($loans as $loan) {
            //get the last element in loan history
            $lowest_remain_amount_LoanHistory = $em->createQueryBuilder()
                ->select('MIN(lh.remainAmount)')
                ->from('AccountBundle:LoanHistory', 'lh')
                ->innerJoin('AccountBundle:Loan', 'l', 'WITH','lh.loan = l.id')
                ->where('l.id = :loan')
                ->setParameter('loan', $loan)
                ->getQuery()
                ->getSingleScalarResult();

            if ($lowest_remain_amount_LoanHistory) {
                $latestLoanHistory = $em->getRepository(LoanHistory::class)->findOneBy(
                    [
                        'remainAmount' => $lowest_remain_amount_LoanHistory,
                        'loan' => $loan
                    ],
                    ['id' => 'DESC']
                );

                $loan->setLoanHistory($latestLoanHistory);
            }
        }
        return $loans;
    }
}
